generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  passwordHash String
  role         UserRoleEnum  @default(executor)
  executorInfo ExecutorInfo?
  custoremInfo CustomerInfo?
  name         String?
  family       String?
  dateOfBirth  DateTime?
  city         String?
  logo         String?
  contact      Contact?
}

model ExecutorInfo {
  id              String           @id @default(uuid())
  user            User             @relation(fields: [userId], references: [id])
  userId          String           @unique
  responses       Response[]
  rating          Float?           @default(0)
  description     String?
  classification  String?
  tags            String[]
  specializations Specialization[]
  expirience      ExpirienceEnum   @default(lessYear)
  costType        CostTypeEnum     @default(none)
  cost            Float?
}

model CustomerInfo {
  id     String  @id @default(uuid())
  user   User    @relation(fields: [userId], references: [id])
  userId String  @unique
  rating Float?  @default(0)
  orders Order[]
}

model Order {
  id               String          @id @default(uuid())
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  customer         CustomerInfo    @relation(fields: [customerId], references: [id])
  customerId       String
  status           OrderStatusEnum @default(active)
  title            String
  description      String?
  files            String[]
  tags             String[]
  views            Int             @default(0)
  costType         CostTypeEnum    @default(none)
  cost             Float?
  responses        Response[]
  responsesCount   Int             @default(0)
  specialization   Specialization  @relation(fields: [specializationId], references: [id])
  specializationId String
}

model Response {
  id         String       @id @default(uuid())
  createdAt  DateTime     @default(now())
  order      Order        @relation(fields: [orderId], references: [id])
  orderId    String
  executor   ExecutorInfo @relation(fields: [executorId], references: [id])
  executorId String
  comment    String
}

model Specialization {
  id            String         @id @default(uuid())
  title         String         @unique
  topLevelTitle String
  orders        Order[]
  executors     ExecutorInfo[]
}

model Contact {
  id       String  @id @default(uuid())
  user     User    @relation(fields: [userId], references: [id])
  userId   String  @unique
  site     String?
  phone    String?
  mail     String?
  telegram String?
}

enum UserRoleEnum {
  executor // Исполнитель
  customer // Заказчик
}

enum CostTypeEnum {
  none // Не указанна
  contract // По договоренности
  inHour // За час
  inOrder // За заказ
}

enum ExpirienceEnum {
  lessYear // Менее года
  overYear // Более года
  overThreeYear // Более трех лет
  overFiveYear // Более пяти лет
  overTeenYear // Более десяти лет
}

enum OrderStatusEnum {
  active
  archived
}
